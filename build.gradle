plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.1'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "Sleeping Town"
		url 'https://repo.sleeping.town'
		// just lib39
		content {
			includeGroup 'com.unascribed'
		}
	}
	maven {
		name = "maven.gegy.dev"
		url = "https://maven.gegy.dev"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/arcana.accesswidener")

	runs {
		datagen {
			client()
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.modid=arcana"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
		}
	}
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// TODO: remove when trinkets is updated
	modImplementation "com.terraformersmc:modmenu:4.0.6"
	modImplementation "dev.emi:emi:${emi_version}"

	for(String cc_module : ["base", "world", "entity"])
		modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-${cc_module}:${cardinal_comp_version}")
	for(String lib39_module : ["core", "weld", "tunnel", "fractal", "phantom", "lockpick", "dessicant"])
		modApi include("com.unascribed:lib39-${lib39_module}:${lib39_version}")
	modApi include("dev.emi:trinkets:${trinkets_version}")

	modRuntimeOnly ("supercoder79:databreaker:0.2.10") {
		exclude module : "fabric-loader"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"lib39_version": lib39_version,
				"trinkets_version": trinkets_version,
				"cc_version": cardinal_comp_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

tasks.withType(ProcessResources).configureEach {
	filesMatching("**/*.json") {
		it.filter {
			it.strip().startsWith("//") ? null : it
		}
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
